(()=>{"use strict";var t={877:(t,e,i)=>{i.r(e),i.d(e,{easeBack:()=>E,easeBackIn:()=>I,easeBackInOut:()=>E,easeBackOut:()=>D,easeBounce:()=>k,easeBounceIn:()=>z,easeBounceInOut:()=>C,easeBounceOut:()=>k,easeCircle:()=>x,easeCircleIn:()=>B,easeCircleInOut:()=>x,easeCircleOut:()=>O,easeCubic:()=>c,easeCubicIn:()=>h,easeCubicInOut:()=>c,easeCubicOut:()=>a,easeElastic:()=>_,easeElasticIn:()=>T,easeElasticInOut:()=>G,easeElasticOut:()=>_,easeExp:()=>y,easeExpIn:()=>w,easeExpInOut:()=>y,easeExpOut:()=>S,easeLinear:()=>n,easePoly:()=>d,easePolyIn:()=>u,easePolyInOut:()=>d,easePolyOut:()=>l,easeQuad:()=>o,easeQuadIn:()=>s,easeQuadInOut:()=>o,easeQuadOut:()=>r,easeSin:()=>v,easeSinIn:()=>p,easeSinInOut:()=>v,easeSinOut:()=>m});const n=t=>+t;function s(t){return t*t}function r(t){return t*(2-t)}function o(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function h(t){return t*t*t}function a(t){return--t*t*t+1}function c(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var u=function t(e){function i(t){return Math.pow(t,e)}return e=+e,i.exponent=t,i}(3),l=function t(e){function i(t){return 1-Math.pow(1-t,e)}return e=+e,i.exponent=t,i}(3),d=function t(e){function i(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,i.exponent=t,i}(3),g=Math.PI,f=g/2;function p(t){return 1==+t?1:1-Math.cos(t*f)}function m(t){return Math.sin(t*f)}function v(t){return(1-Math.cos(g*t))/2}function b(t){return 1.0009775171065494*(Math.pow(2,-10*t)-.0009765625)}function w(t){return b(1-+t)}function S(t){return 1-b(t)}function y(t){return((t*=2)<=1?b(1-t):2-b(t-1))/2}function B(t){return 1-Math.sqrt(1-t*t)}function O(t){return Math.sqrt(1- --t*t)}function x(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var M=7.5625;function z(t){return 1-k(1-t)}function k(t){return(t=+t)<.36363636363636365?M*t*t:t<.7272727272727273?M*(t-=.5454545454545454)*t+.75:t<.9090909090909091?M*(t-=.8181818181818182)*t+.9375:M*(t-=.9545454545454546)*t+.984375}function C(t){return((t*=2)<=1?1-k(1-t):k(t-1)+1)/2}var P=1.70158,I=function t(e){function i(t){return(t=+t)*t*(e*(t-1)+t)}return e=+e,i.overshoot=t,i}(P),D=function t(e){function i(t){return--t*t*((t+1)*e+t)+1}return e=+e,i.overshoot=t,i}(P),E=function t(e){function i(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,i.overshoot=t,i}(P),A=2*Math.PI,T=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=A);function s(t){return e*b(- --t)*Math.sin((n-t)/i)}return s.amplitude=function(e){return t(e,i*A)},s.period=function(i){return t(e,i)},s}(1,.3),_=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=A);function s(t){return 1-e*b(t=+t)*Math.sin((t+n)/i)}return s.amplitude=function(e){return t(e,i*A)},s.period=function(i){return t(e,i)},s}(1,.3),G=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=A);function s(t){return((t=2*t-1)<0?e*b(-t)*Math.sin((n-t)/i):2-e*b(t)*Math.sin((n+t)/i))/2}return s.amplitude=function(e){return t(e,i*A)},s.period=function(i){return t(e,i)},s}(1,.3)},307:(t,e,i)=>{i.r(e)},221:function(t,e,i){var n=this&&this.__createBinding||(Object.create?function(t,e,i,n){void 0===n&&(n=i),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[i]}})}:function(t,e,i,n){void 0===n&&(n=i),t[n]=e[i]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)"default"!==i&&Object.prototype.hasOwnProperty.call(t,i)&&n(e,t,i);return s(e,t),e};Object.defineProperty(e,"__esModule",{value:!0});const o=i(60),h=r(i(877));i(307),e.default=class{constructor(t=8){this.cellSize=60,this.scale=1.5,this.gridColor="#333333",this.currentPlayer="A",this.isRunning=!1,this.fpsInterval=20,this.animatingDrop=!1,this.dropAnimationY=0,this.canAcceptInput=!0,this.debug=!1,this.gridSize=t,this.width=this.gridSize*this.cellSize,this.height=this.gridSize*this.cellSize,this.canvas=document.getElementById("canvas"),this.context=this.canvas.getContext("2d"),this.setupDimensions(),this.lastTime=window.performance.now(),this.setupAudio()}setupDimensions(){if(this.gridSize*this.cellSize*this.scale+1>window.innerHeight){const t=window.innerHeight-document.getElementById("btnContainer").getBoundingClientRect().height;this.cellSize=t/(this.scale*this.gridSize)-1,this.width=this.gridSize*this.cellSize,this.height=this.gridSize*this.cellSize}this.canvas.width=this.gridSize*this.cellSize*this.scale+1,this.canvas.height=this.canvas.width,this.context.scale(this.scale,this.scale);const t=this.canvas.parentElement;t.style.width=`${this.canvas.width.toString()}px`,t.style.height=t.style.width}setupGrid(){this.grid=[],this.highlighted=[],this.debugGrid=[];for(let t=0;t<this.gridSize;t++){this.grid.push([]),this.highlighted.push([]),this.debugGrid.push([]);for(let t=0;t<this.gridSize;t++)this.grid[this.grid.length-1].push(null),this.highlighted[this.highlighted.length-1].push(!1),this.debugGrid[this.debugGrid.length-1].push(!1)}}getXYFromMouseEvent(t){return{x:t.offsetX/this.scale,y:t.offsetY/this.scale}}getXYFromTouchEvent(t){const e=t.touches.length>0?t.touches:t.changedTouches,i=this.canvas.getBoundingClientRect();return{x:(e[0].pageX-i.x)/this.scale,y:(e[0].pageY-i.y)/this.scale}}getRowColFromXY(t,e){return{row:Math.floor(e/this.cellSize),col:Math.floor(t/this.cellSize)}}outOfBounds(t,e){return e>=this.gridSize||t>=this.gridSize}handleMouseMove(t,e){if(!this.canAcceptInput)return;const{x:i,y:n}="mouse"==e?this.getXYFromMouseEvent(t):this.getXYFromTouchEvent(t),{row:s,col:r}=this.getRowColFromXY(i,n);this.outOfBounds(s,r)||(this.clearHighlights(),this.highlighted[s][r]=!0)}handleClick(t,e){if(console.log(t),!this.canAcceptInput)return;const{x:i,y:n}="mouse"==e?this.getXYFromMouseEvent(t):this.getXYFromTouchEvent(t),{row:s,col:r}=this.getRowColFromXY(i,n);this.outOfBounds(s,r)||(this.clearHighlights(),this.handleBoxClick(s,r))}registerHandlers(){this.canvas.onmousemove=t=>this.handleMouseMove(t,"mouse"),this.canvas.ontouchstart=t=>this.handleMouseMove(t,"touch"),this.canvas.ontouchmove=t=>this.handleMouseMove(t,"touch"),this.canvas.onclick=t=>this.handleClick(t,"mouse"),this.canvas.ontouchend=t=>this.handleClick(t,"touch"),window.DeviceOrientationEvent&&(console.log("Can handle DeviceOrientationEvent"),window.addEventListener("deviceorientation",this.setupDimensions,!1))}handleBoxClick(t,e){const i=this.currentPlayer,{row:n,col:s}=this.dropPiece(e);void 0!==n&&void 0!==s&&(this.lastDrop={clickRow:t,clickCol:e,row:n,col:s,player:i},this.sound.pause(),this.sound.currentTime=0,this.triggerAnimateDrop())}iterateOverCells(t){for(let e=0;e<this.gridSize;e++)for(let i=0;i<this.gridSize;i++)t(e,i)}clearHighlights(){this.iterateOverCells(((t,e)=>this.highlighted[t][e]=!1))}drawHighlight(){for(let t=0;t<this.gridSize;t++)for(let e=0;e<this.gridSize;e++)if(!this.grid[t][e])if(1==this.highlighted[t][e]){const i=this.colorFromPlayer(this.currentPlayer).toLowerCase();this.drawBlock(t,e,i)}else this.clearBlock(t,e)}colorFromPlayer(t){return"A"==t?"Red":"Blue"}startGame(){this.setupGrid(),this.registerHandlers(),this.winner=null,this.lastDrop=null,this.animatingDrop=!1,this.canAcceptInput=!0,this.isRunning=!0,this.runGameLoop()}runGameLoop(t){if(!this.isRunning)return void this.handleWin();window.requestAnimationFrame(this.runGameLoop.bind(this));const e=t,i=e-this.lastTime;i>this.fpsInterval&&(this.lastTime=e-i%this.fpsInterval,this.drawGrid(),this.drawBlocks(),this.drawHighlight(),this.animateDrop(),this.winner&&!this.animatingDrop&&(this.isRunning=!1))}handleWin(){this.canAcceptInput=!1;const t=this.colorFromPlayer(this.winner);this.context.font="24px sans-serif",this.context.fillStyle=this.gridColor;const e=`${t} won!`,i=this.context.measureText(e);this.context.fillText(e,this.width/2-i.width/2,this.height/2-i.actualBoundingBoxAscent/2,this.width)}triggerAnimateDrop(){this.canAcceptInput=!1,this.animatingDrop=!0}animateDrop(){if(!this.lastDrop||!this.animatingDrop)return;window.requestAnimationFrame(this.animateDrop.bind(this));const{clickRow:t,clickCol:e,row:i,col:n,player:s}=this.lastDrop;if(t*this.cellSize+this.dropAnimationY>=this.cellSize*i){this.grid[i][n]=s,this.playSound();const t=o.checkPositionForWin(i,n,s,this.grid,this.gridSize,this.debugGrid,this.debug);this.animatingDrop=!1,this.dropAnimationY=0,this.debug&&this.setClearDebugTimeout(),t?(this.debug&&this.clearDebugGrid(),this.winner=s):(this.togglePlayer(),this.canAcceptInput=!0),this.runGameLoop()}else this.drawBlockAtPoint(e*this.cellSize,t*this.cellSize+this.dropAnimationY,this.colorFromPlayer(s)),this.dropAnimationY+=h.easePolyIn(1.2)}drawBlockAtPoint(t,e,i){this.context.fillStyle=i,this.context.fillRect(t+1/this.scale,e+1/this.scale,this.cellSize-1,this.cellSize-1)}drawBlock(t,e,i){this.context.fillStyle=i,this.context.fillRect(e*this.cellSize+1/this.scale,t*this.cellSize+1/this.scale,this.cellSize-1,this.cellSize-1)}clearBlock(t,e){this.context.clearRect(e*this.cellSize+1/this.scale,t*this.cellSize+1/this.scale,this.cellSize-1,this.cellSize-1)}setClearDebugTimeout(){setTimeout((()=>{this.clearDebugGrid()}),1e3)}clearDebugGrid(){this.iterateOverCells(((t,e)=>this.debugGrid[t][e]=!1))}drawBlocks(){this.iterateOverCells(((t,e)=>{this.debugGrid[t][e]?this.drawBlock(t,e,"green"):"A"==this.grid[t][e]?this.drawBlock(t,e,"red"):"B"==this.grid[t][e]?this.drawBlock(t,e,"blue"):this.drawBlock(t,e,"white")}))}drawGrid(){this.context.strokeStyle=this.gridColor;for(let t=0;t<=this.width;t+=this.cellSize)this.context.beginPath(),this.context.moveTo(t,0),this.context.lineTo(t,this.height),this.context.stroke();for(let t=0;t<=this.height;t+=this.cellSize)this.context.beginPath(),this.context.moveTo(0,t),this.context.lineTo(this.width,t),this.context.stroke()}togglePlayer(){"A"==this.currentPlayer?this.currentPlayer="B":this.currentPlayer="A"}dropPiece(t){for(let e=this.gridSize-1;e>=0;e--)if(!this.grid[e][t])return{row:e,col:t}}toggleDebug(){this.debug=!this.debug}setupAudio(){this.sound=document.createElement("audio"),this.sound.src="assets/ping.mp3",this.sound.setAttribute("preload","auto"),this.sound.setAttribute("controls","none"),this.sound.style.display="none",document.body.appendChild(this.sound)}restartSound(){this.sound.currentTime=0}playSound(){this.sound.paused?this.sound.play():this.restartSound()}}},514:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(){this.canvas=document.createElement("canvas"),this.canvas.id="canvas";const t=document.createElement("div");t.id="game-container",this.container=document.createElement("div"),this.container.id="game",this.debugBtn=document.createElement("button"),this.debugBtn.id="debugBtn",this.debugBtn.innerHTML="Toggle Debug",this.debugBtn.classList.add("btn");const e=document.createElement("div");e.id="btnContainer",this.startOverBtn=document.createElement("button"),this.startOverBtn.id="startOverBtn",this.startOverBtn.classList.add("btn"),this.startOverBtn.innerHTML="Start Over",t.appendChild(this.container),e.appendChild(this.startOverBtn),e.appendChild(this.debugBtn),this.container.appendChild(this.canvas),this.container.appendChild(e),document.body.appendChild(t)}toggleDebug(t){t.toggleDebug(),this.debugBtn.classList.toggle("disabled")}addEventListeners(t){this.startOverBtn.addEventListener("click",(()=>t.startGame())),this.debugBtn.addEventListener("click",(()=>this.toggleDebug(t)))}}},607:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(i(221)),r=new(n(i(514)).default),o=new s.default;r.addEventListeners(o),o.startGame()},60:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.checkPositionForWin=void 0;const i=(t,e)=>{let i=0;for(let n=0;n<t.length;n++)if(t[n]==e){if(i++,4==i)return console.log("won"),!0}else i=0};e.checkPositionForWin=(t,e,n,s,r,o,h=!1)=>!!(((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(e-i<0)continue;const n=s[t][e-i];if(h&&(o[t][e-i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(e+i>r-1)continue;const n=s[t][e+i];if(h&&(o[t][e+i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0)continue;const n=s[t-i][e];if(h&&(o[t-i][e]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1)continue;const n=s[t+i][e];if(h&&(o[t+i][e]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0||e+i>r-1)continue;const n=s[t-i][e+i];if(h&&(o[t-i][e+i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1||e-i<0)continue;const n=s[t+i][e-i];if(h&&(o[t+i][e-i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0||e-i<0)continue;const n=s[t-i][e-i];if(h&&(o[t-i][e-i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1||e+i>r-1)continue;const n=s[t+i][e+i];if(h&&(o[t+i][e+i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h))}},e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={exports:{}};return t[n].call(s.exports,s,s.exports,i),s.exports}i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,