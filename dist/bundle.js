(()=>{"use strict";var t={877:(t,e,i)=>{i.r(e),i.d(e,{easeBack:()=>D,easeBackIn:()=>I,easeBackInOut:()=>D,easeBackOut:()=>A,easeBounce:()=>M,easeBounceIn:()=>P,easeBounceInOut:()=>z,easeBounceOut:()=>M,easeCircle:()=>x,easeCircleIn:()=>O,easeCircleInOut:()=>x,easeCircleOut:()=>B,easeCubic:()=>u,easeCubicIn:()=>h,easeCubicInOut:()=>u,easeCubicOut:()=>a,easeElastic:()=>E,easeElasticIn:()=>G,easeElasticInOut:()=>T,easeElasticOut:()=>E,easeExp:()=>y,easeExpIn:()=>w,easeExpInOut:()=>y,easeExpOut:()=>S,easeLinear:()=>n,easePoly:()=>d,easePolyIn:()=>c,easePolyInOut:()=>d,easePolyOut:()=>l,easeQuad:()=>o,easeQuadIn:()=>s,easeQuadInOut:()=>o,easeQuadOut:()=>r,easeSin:()=>b,easeSinIn:()=>p,easeSinInOut:()=>b,easeSinOut:()=>m});const n=t=>+t;function s(t){return t*t}function r(t){return t*(2-t)}function o(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function h(t){return t*t*t}function a(t){return--t*t*t+1}function u(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var c=function t(e){function i(t){return Math.pow(t,e)}return e=+e,i.exponent=t,i}(3),l=function t(e){function i(t){return 1-Math.pow(1-t,e)}return e=+e,i.exponent=t,i}(3),d=function t(e){function i(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,i.exponent=t,i}(3),g=Math.PI,f=g/2;function p(t){return 1==+t?1:1-Math.cos(t*f)}function m(t){return Math.sin(t*f)}function b(t){return(1-Math.cos(g*t))/2}function v(t){return 1.0009775171065494*(Math.pow(2,-10*t)-.0009765625)}function w(t){return v(1-+t)}function S(t){return 1-v(t)}function y(t){return((t*=2)<=1?v(1-t):2-v(t-1))/2}function O(t){return 1-Math.sqrt(1-t*t)}function B(t){return Math.sqrt(1- --t*t)}function x(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var k=7.5625;function P(t){return 1-M(1-t)}function M(t){return(t=+t)<.36363636363636365?k*t*t:t<.7272727272727273?k*(t-=.5454545454545454)*t+.75:t<.9090909090909091?k*(t-=.8181818181818182)*t+.9375:k*(t-=.9545454545454546)*t+.984375}function z(t){return((t*=2)<=1?1-M(1-t):M(t-1)+1)/2}var C=1.70158,I=function t(e){function i(t){return(t=+t)*t*(e*(t-1)+t)}return e=+e,i.overshoot=t,i}(C),A=function t(e){function i(t){return--t*t*((t+1)*e+t)+1}return e=+e,i.overshoot=t,i}(C),D=function t(e){function i(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,i.overshoot=t,i}(C),_=2*Math.PI,G=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=_);function s(t){return e*v(- --t)*Math.sin((n-t)/i)}return s.amplitude=function(e){return t(e,i*_)},s.period=function(i){return t(e,i)},s}(1,.3),E=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=_);function s(t){return 1-e*v(t=+t)*Math.sin((t+n)/i)}return s.amplitude=function(e){return t(e,i*_)},s.period=function(i){return t(e,i)},s}(1,.3),T=function t(e,i){var n=Math.asin(1/(e=Math.max(1,e)))*(i/=_);function s(t){return((t=2*t-1)<0?e*v(-t)*Math.sin((n-t)/i):2-e*v(t)*Math.sin((n+t)/i))/2}return s.amplitude=function(e){return t(e,i*_)},s.period=function(i){return t(e,i)},s}(1,.3)},307:(t,e,i)=>{i.r(e)},221:function(t,e,i){var n=this&&this.__createBinding||(Object.create?function(t,e,i,n){void 0===n&&(n=i),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[i]}})}:function(t,e,i,n){void 0===n&&(n=i),t[n]=e[i]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)"default"!==i&&Object.prototype.hasOwnProperty.call(t,i)&&n(e,t,i);return s(e,t),e};Object.defineProperty(e,"__esModule",{value:!0});const o=i(60),h=r(i(877));i(307),e.default=class{constructor(t=8){this.cellSize=60,this.gridColor="#333333",this.currentPlayer="A",this.isRunning=!1,this.fpsInterval=20,this.animatingDrop=!1,this.dropAnimationY=0,this.canAcceptInput=!0,this.debug=!1,this.scale=2,this.gridSize=t,this.width=this.gridSize*this.cellSize,this.height=this.gridSize*this.cellSize,this.canvas=document.getElementById("canvas"),this.canvas.width=this.gridSize*(this.cellSize+1)*this.scale,this.canvas.height=this.canvas.width,this.context=this.canvas.getContext("2d"),this.context.scale(this.scale,this.scale),this.lastTime=window.performance.now(),this.setupAudio()}setupGrid(){this.grid=[],this.highlighted=[],this.debugGrid=[];for(let t=0;t<this.gridSize;t++){this.grid.push([]),this.highlighted.push([]),this.debugGrid.push([]);for(let t=0;t<this.gridSize;t++)this.grid[this.grid.length-1].push(null),this.highlighted[this.highlighted.length-1].push(!1),this.debugGrid[this.debugGrid.length-1].push(!1)}}getXY(t){return{x:t.offsetX,y:t.offsetY}}getRowColFromXY(t,e){return{row:Math.floor(e/this.cellSize),col:Math.floor(t/this.cellSize)}}outOfBounds(t,e){return e>=this.gridSize||t>=this.gridSize}registerHandlers(){this.canvas.onmousemove=t=>{if(!this.canAcceptInput)return;const{x:e,y:i}=this.getXY(t),{row:n,col:s}=this.getRowColFromXY(e,i);this.outOfBounds(n,s)||(this.clearHighlights(),this.highlighted[n][s]=!0)},this.canvas.onclick=t=>{if(!this.canAcceptInput)return;const{x:e,y:i}=this.getXY(t),{row:n,col:s}=this.getRowColFromXY(e,i);this.outOfBounds(n,s)||(this.clearHighlights(),this.handleBoxClick(n,s))}}handleBoxClick(t,e){const i=this.currentPlayer,{row:n,col:s}=this.dropPiece(e);void 0!==n&&void 0!==s&&(this.lastDrop={clickRow:t,clickCol:e,row:n,col:s,player:i},this.sound.pause(),this.sound.currentTime=0,this.triggerAnimateDrop())}iterateOverCells(t){for(let e=0;e<this.gridSize;e++)for(let i=0;i<this.gridSize;i++)t(e,i)}clearHighlights(){this.iterateOverCells(((t,e)=>this.highlighted[t][e]=!1))}drawHighlight(){for(let t=0;t<this.gridSize;t++)for(let e=0;e<this.gridSize;e++)if(!this.grid[t][e])if(1==this.highlighted[t][e]){const i=this.colorFromPlayer(this.currentPlayer).toLowerCase();this.drawBlock(t,e,i)}else this.clearBlock(t,e)}colorFromPlayer(t){return"A"==t?"Red":"Blue"}startGame(){this.setupGrid(),this.registerHandlers(),this.winner=null,this.lastDrop=null,this.animatingDrop=!1,this.canAcceptInput=!0,this.isRunning=!0,this.runGameLoop()}runGameLoop(t){if(!this.isRunning)return void this.handleWin();window.requestAnimationFrame(this.runGameLoop.bind(this));const e=t,i=e-this.lastTime;i>this.fpsInterval&&(this.lastTime=e-i%this.fpsInterval,this.drawGrid(),this.drawBlocks(),this.drawHighlight(),this.animateDrop(),this.winner&&!this.animatingDrop&&(this.isRunning=!1))}handleWin(){this.canAcceptInput=!1;const t=this.colorFromPlayer(this.winner);this.context.font="48px serif",this.context.fillStyle=this.gridColor;const e=`${t} won!`,i=this.context.measureText(e);this.context.fillText(e,this.width/2-i.width/2,this.height/2-i.actualBoundingBoxAscent/2,this.width)}triggerAnimateDrop(){this.canAcceptInput=!1,this.animatingDrop=!0}animateDrop(){if(!this.lastDrop||!this.animatingDrop)return;window.requestAnimationFrame(this.animateDrop.bind(this));const{clickRow:t,clickCol:e,row:i,col:n,player:s}=this.lastDrop;if(t*this.cellSize+this.dropAnimationY>=this.cellSize*i){this.grid[i][n]=s,console.log("playing sound"),this.playSound();const t=o.checkPositionForWin(i,n,s,this.grid,this.gridSize,this.debugGrid,this.debug);this.animatingDrop=!1,this.dropAnimationY=0,this.debug&&this.setClearDebugTimeout(),t?(this.debug&&this.clearDebugGrid(),this.winner=s):(this.togglePlayer(),this.canAcceptInput=!0),this.runGameLoop()}else this.drawBlockAtPoint(e*this.cellSize,t*this.cellSize+this.dropAnimationY,this.colorFromPlayer(s)),this.dropAnimationY+=h.easePolyIn(1.2)}drawBlockAtPoint(t,e,i){this.context.fillStyle=i,this.context.fillRect(t+1,e+1,this.cellSize-1,this.cellSize-1)}drawBlock(t,e,i){this.context.fillStyle=i,this.context.fillRect(e*this.cellSize+1,t*this.cellSize+1,this.cellSize-1,this.cellSize-1)}clearBlock(t,e){this.context.clearRect(e*this.cellSize+1,t*this.cellSize+1,this.cellSize-1,this.cellSize-1)}setClearDebugTimeout(){setTimeout((()=>{this.clearDebugGrid()}),1e3)}clearDebugGrid(){this.iterateOverCells(((t,e)=>this.debugGrid[t][e]=!1))}drawBlocks(){this.iterateOverCells(((t,e)=>{this.debugGrid[t][e]?this.drawBlock(t,e,"green"):"A"==this.grid[t][e]?this.drawBlock(t,e,"red"):"B"==this.grid[t][e]?this.drawBlock(t,e,"blue"):this.drawBlock(t,e,"white")}))}drawGrid(){this.context.strokeStyle=this.gridColor;for(let t=0;t<=this.width;t+=this.cellSize)this.context.beginPath(),this.context.moveTo(t,0),this.context.lineTo(t,this.height),this.context.stroke();for(let t=0;t<=this.height;t+=this.cellSize)this.context.beginPath(),this.context.moveTo(0,t),this.context.lineTo(this.width,t),this.context.stroke()}togglePlayer(){"A"==this.currentPlayer?this.currentPlayer="B":this.currentPlayer="A"}dropPiece(t){for(let e=this.gridSize-1;e>=0;e--)if(!this.grid[e][t])return{row:e,col:t}}toggleDebug(){this.debug=!this.debug}setupAudio(){this.sound=document.createElement("audio"),this.sound.src="assets/ping.mp3",this.sound.setAttribute("preload","auto"),this.sound.setAttribute("controls","none"),this.sound.style.display="none",document.body.appendChild(this.sound)}restartSound(){this.sound.currentTime=0}playSound(){this.sound.paused?this.sound.play():this.restartSound()}}},514:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(){this.canvas=document.createElement("canvas"),this.canvas.id="canvas",this.container=document.createElement("div"),this.container.id="game",this.debugBtn=document.createElement("button"),this.debugBtn.id="debugBtn",this.debugBtn.innerHTML="Toggle Debug",this.debugBtn.classList.add("btn");const t=document.createElement("div");this.startOverBtn=document.createElement("button"),this.startOverBtn.id="startOverBtn",this.startOverBtn.classList.add("btn"),this.startOverBtn.innerHTML="Start Over",t.appendChild(this.startOverBtn),t.appendChild(this.debugBtn),this.container.appendChild(this.canvas),this.container.appendChild(t),document.body.appendChild(this.container)}toggleDebug(t){t.toggleDebug(),this.debugBtn.classList.toggle("disabled")}addEventListeners(t){this.startOverBtn.addEventListener("click",(()=>t.startGame())),this.debugBtn.addEventListener("click",(()=>this.toggleDebug(t)))}}},607:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=n(i(221)),r=new(n(i(514)).default),o=new s.default;r.addEventListeners(o),o.startGame()},60:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.checkPositionForWin=void 0;const i=(t,e)=>{let i=0;for(let n=0;n<t.length;n++)if(t[n]==e){if(i++,4==i)return console.log("won"),!0}else i=0};e.checkPositionForWin=(t,e,n,s,r,o,h=!1)=>!!(((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(e-i<0)continue;const n=s[t][e-i];if(h&&(o[t][e-i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(e+i>r-1)continue;const n=s[t][e+i];if(h&&(o[t][e+i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0)continue;const n=s[t-i][e];if(h&&(o[t-i][e]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1)continue;const n=s[t+i][e];if(h&&(o[t+i][e]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0||e+i>r-1)continue;const n=s[t-i][e+i];if(h&&(o[t-i][e+i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1||e-i<0)continue;const n=s[t+i][e-i];if(h&&(o[t+i][e-i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h)||((t,e,n,s,r,o,h=!1)=>{let a=[];for(let i=3;i>0;i--){if(t-i<0||e-i<0)continue;const n=s[t-i][e-i];if(h&&(o[t-i][e-i]=!0),!n)break;a.push(n)}for(let i=0;i<4;i++){if(t+i>r-1||e+i>r-1)continue;const n=s[t+i][e+i];if(h&&(o[t+i][e+i]=!0),!n)break;a.push(n)}return i(a,n)})(t,e,n,s,r,o,h))}},e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={exports:{}};return t[n].call(s.exports,s,s.exports,i),s.exports}i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,